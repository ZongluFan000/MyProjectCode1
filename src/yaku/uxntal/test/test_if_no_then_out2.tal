 |0000 
@System $2 $2 $1 $1 $2 $2 $2 $2 $1 
&state
 $1
|0100
 test_if_then_else 
BRK

@test_if_then_else_res $2
@test_if_then_else_n $2
@test_if_then_else
 #000a POP2
 ;test_if_then_else_n ;test_if_then_else_res #01 test ;test_if_then_else_res LDA2 print-int #2018 DEO
 #0a18 DEO POP2r exit 
BRK

@test_vvv $1
@test_res $2
@test_n $2
@test
 ;test_vvv STA
 ;test_res STA2
 ;test_n STA2 { 0007 49 46 2d 54 48 45 4e } STH2r print-string #2018 DEO
 #0a18 DEO
 #000b ;test_res LDA2 SWP2 OVR2 STA2 LDA2
 #0002 mul2 ;test_n LDA2 STA2
 ;test_vvv LDA ?&b7 
&b7_e
 !&c_e7 
&b7
 ;test_res LDA2 DUP2 LDA2 INC2 SWP2 STA2
 &c_e7
 ;test_res LDA2 LDA2 print-int #2018 DEO
 ;test_n LDA2 LDA2 print-int #2018 DEO
 #0a18 DEO { 000b 45 4e 44 20 49 46 2d 54 48 45 4e } STH2r print-string #2018 DEO
 #0a18 DEO JMP2r

@exit
 ( POP2 )
 #80 .System/state DEO POP2r 
BRK

@fmt-dec-short
 DUP2 n-dec-digits-in-short DUP
 #01 EQU ?&done ,&n-dig STR
 #01 
&loop
 ROT ROT DUP2
 #000a DIV2 DUP2
 #000a MUL2 ROT2 SWP2 SUB2 NIP
 #30 ADD ROT ROT SWP2 SWP SWP2 ROT INC DUP LIT
 &n-dig
 $1 LTH ?&loop 
&done
 ROT ROT NIP
 #30 ADD SWP JMP2r

@mul2
 OVR2 OVR2
 #8000 LTH2 STH
 #8000 LTH2 STH ANDrk STHr ?&pp ORArk STHr
 #01 SWP SUB ?&mm STH2r
 #01 SWP SUB AND ?&mp !&pm 
&mp
 SWP2
 &pm
 neg2 MUL2 !neg2 
&mm
 neg2 neg2 
&pp
 MUL2 POP2r JMP2r

@n-dec-digits-in-short
 DUP2
 #0000 EQU2 ?&is_zero #2710 #0005 
&loop
 ROT2 ROT2 DIV2k
 #0000 NEQ2 ?&done_loop #000a DIV2 ROT2
 #0001 SUB2 !&loop 
&is_zero
 #01 JMP2r
 &done_loop
 POP2 POP2 NIP JMP2r

@neg2
 #0000 SWP2 SUB2 JMP2r

@print-int
 DUP2
 #0000 EQU2 ?&zero fmt-dec-short { #18 DEO JMP2r
 } STH2r !proc-n-items-from-ws 
&zero
 POP2
 #3018 DEO JMP2r

@print-string
 #18 !write-string

@proc-n-items-from-ws
 ROT STHk
 &loop
 #00 EQU ?&end STH2k JSR2 STH2r STHr
 #01 SUB STHk !&loop 
&end
 POPr POP2 JMP2r

@write-string
 STH DUP2 LDA2 SWP2 INC2 INC2 DUP2 ROT2 ADD2 SWP2
 &l
 LDAk STHrk DEO INC2 GTH2k ?&l POP2 POP2 POPr JMP2r
